{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manis\\\\OneDrive\\\\Desktop\\\\study\\\\react\\\\expense-tracker\\\\src\\\\components\\\\Expenses\\\\ExpensesList.js\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesList = props => {\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expenses Found!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 26\n  }, this);\n  if (props.items.length > 0) {\n    expenseContent = props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.name,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this));\n  }\n};\n_c = ExpensesList;\nexport default ExpensesList;\n\n//what is expenseContent?\n//expensecontent is the variable by which we can display the expenses acoording to the \n//expenses like if filteredexpeses is empty then the upper side code is run i.e in <p>\n//else lenght>0's code run.\nvar _c;\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["ExpenseItem","ExpensesList","props","expenseContent","items","length","map","expense","name","amount","date","id"],"sources":["C:/Users/manis/OneDrive/Desktop/study/react/expense-tracker/src/components/Expenses/ExpensesList.js"],"sourcesContent":["import \"./ExpensesList.css\"\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = props =>{\r\n    let expenseContent = <p>No Expenses Found!</p>;\r\n    if (props.items.length > 0) {\r\n      expenseContent = props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.name}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ));\r\n    }\r\n}\r\n\r\nexport default ExpensesList;\r\n\r\n\r\n\r\n\r\n//what is expenseContent?\r\n//expensecontent is the variable by which we can display the expenses acoording to the \r\n//expenses like if filteredexpeses is empty then the upper side code is run i.e in <p>\r\n//else lenght>0's code run."],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,YAAY,GAAGC,KAAK,IAAG;EACzB,IAAIC,cAAc,gBAAG;IAAA,UAAG;EAAkB;IAAA;IAAA;IAAA;EAAA,QAAI;EAC9C,IAAID,KAAK,CAACE,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;IAC1BF,cAAc,GAAGD,KAAK,CAACE,KAAK,CAACE,GAAG,CAAEC,OAAO,iBACvC,QAAC,WAAW;MAEV,KAAK,EAAEA,OAAO,CAACC,IAAK;MACpB,MAAM,EAAED,OAAO,CAACE,MAAO;MACvB,IAAI,EAAEF,OAAO,CAACG;IAAK,GAHdH,OAAO,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAKlB,CAAC;EACJ;AACJ,CAAC;AAAA,KAZKV,YAAY;AAclB,eAAeA,YAAY;;AAK3B;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}