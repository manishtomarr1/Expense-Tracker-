{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manis\\\\OneDrive\\\\Desktop\\\\study\\\\react\\\\expense-tracker\\\\src\\\\components\\\\Expenses\\\\ExpenseItem.js\";\nimport React, { useState } from 'react'; // usestate is the react hook or the function inside react that allow us to listen the event and change accordingly.\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseItem = props => {\n  // props access the propery of app.js \n\n  // const [title, setTitle] = useState(props.title); //go to comment section for info\n\n  // const clickHandler =() => {\n  //   setTitle(\"updated!\");\n  //    console.log(\"yes! clicked\");\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expense-item\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n      date: props.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-item__description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__price\",\n        children: [\"RS \", props.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpenseItem;\nexport default ExpenseItem;\n\n//shift+alt+f for format the document\n\n// what is props?\n\n// props is the method by which we can pass data from one file to another file.\n// like here we pass data from App.js to expensesitem.js\n//with the help of props we can access the property of app.js in expenseitem.js\n\n//what are hooks?\n//hooks start with the \"use\"\n//hooks must be called inside the react component function.\n//when we call hook function a  special variable is create.\n\n//usestate hook?\n//first we pass an initial value in this hook i.e props.title\n//use state hooks always return array in which first is the current state value\n//and another is the function which we used to set the new value.\n//for storing those value here v take an ary.\n//then we use that second value which we passed in the array for updating value.\n\n//why we use useState hook?\n// beacuse in the first go the element title is not changed react ignore the value\n// if we assingd to any varible\n// these are the special cases by which we can handle the events.\n// when state will be change the react component call again and the code excute and the value is \n// changed.\nvar _c;\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","date","title","amount"],"sources":["C:/Users/manis/OneDrive/Desktop/study/react/expense-tracker/src/components/Expenses/ExpenseItem.js"],"sourcesContent":["import React, {useState} from 'react'; // usestate is the react hook or the function inside react that allow us to listen the event and change accordingly.\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./ExpenseItem.css\";\r\n\r\nconst ExpenseItem = (props) => { // props access the propery of app.js \r\n\r\n \r\n\r\n  // const [title, setTitle] = useState(props.title); //go to comment section for info\r\n\r\n  // const clickHandler =() => {\r\n  //   setTitle(\"updated!\");\r\n  //    console.log(\"yes! clicked\");\r\n  // };\r\n\r\n  return (\r\n    <Card className=\"expense-item\">{/* this is the root element i.e only one in one component */}\r\n   \r\n     <ExpenseDate date={props.date}></ExpenseDate>\r\n     {/* because date come from app to expensedate and expensedate to here in expenseitem thats why we use attribute concept here. */}\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>{/* for event lister or useState hook we use title var*/}\r\n        <div className=\"expense-item__price\">RS {props.amount}</div>\r\n      </div>\r\n      {/* <button onClick={clickHandler}>Change title</button> */}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default ExpenseItem;\r\n\r\n//shift+alt+f for format the document\r\n\r\n// what is props?\r\n\r\n// props is the method by which we can pass data from one file to another file.\r\n// like here we pass data from App.js to expensesitem.js\r\n//with the help of props we can access the property of app.js in expenseitem.js\r\n\r\n//what are hooks?\r\n//hooks start with the \"use\"\r\n//hooks must be called inside the react component function.\r\n//when we call hook function a  special variable is create.\r\n\r\n//usestate hook?\r\n//first we pass an initial value in this hook i.e props.title\r\n//use state hooks always return array in which first is the current state value\r\n//and another is the function which we used to set the new value.\r\n//for storing those value here v take an ary.\r\n//then we use that second value which we passed in the array for updating value.\r\n\r\n//why we use useState hook?\r\n// beacuse in the first go the element title is not changed react ignore the value\r\n// if we assingd to any varible\r\n// these are the special cases by which we can handle the events.\r\n// when state will be change the react component call again and the code excute and the value is \r\n// changed."],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO,CAAC,CAAC;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,mBAAmB;AAAC;AAE3B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAE;;EAI/B;;EAEA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,IAAI;IAAC,SAAS,EAAC,cAAc;IAAA,wBAE7B,QAAC,WAAW;MAAC,IAAI,EAAEA,KAAK,CAACC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAe,eAE5C;MAAK,SAAS,EAAC,2BAA2B;MAAA,wBACxC;QAAA,UAAKD,KAAK,CAACE;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM,eACtB;QAAK,SAAS,EAAC,qBAAqB;QAAA,WAAC,KAAG,EAACF,KAAK,CAACG,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAO;IAAA;MAAA;MAAA;MAAA;IAAA,QACxD;EAAA;IAAA;IAAA;IAAA;EAAA,QAED;AAEX,CAAC;AAAA,KAvBKJ,WAAW;AAyBjB,eAAeA,WAAW;;AAE1B;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}