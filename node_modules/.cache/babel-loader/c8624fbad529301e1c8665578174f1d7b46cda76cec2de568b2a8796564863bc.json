{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manis\\\\OneDrive\\\\Desktop\\\\study\\\\react\\\\expense-tracker\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport \"./ExpenseForm.css\";\nimport React, { useState } from \"react\"; //for details go to expenseitems comment section\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\"); // jb bhi amount ki state changed ho.\n  const [enteredDate, setEnteredDate] = useState(''); // for date state changed \n\n  const titleChangedHadler = event => {\n    var newVal = setEnteredTitle(event.target.value); // by which the new updated value we get.\n    //because this function helps us to set new value.\n\n    console.log(newVal);\n  };\n  const amountChangedHandler = event => {\n    setEnteredAmount(event.target.value); // by default this value is the string that's why we pass string on use state.\n    console.log(setEnteredAmount);\n  };\n  const dateChangedHandler = event => {\n    setEnteredDate(event.target.value);\n    console.log(setEnteredDate);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangedHadler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2020-01-01\",\n          max: \"2023-12-31\",\n          onChange: dateChangedHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"LPGyUm/R2EdY8kK4BlWsfKOWC4w=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\n\n//if we want to add any event listener in any html tag simply add on and the event name.\n\n//on titlechangeshandeler we apssed the arrgument as event beacus eevent is trigered all the chnages\n//which occur on this and gives us the JSON file by which we can take the value of new input.\n\n//why we use usestate here?\n//because when the component is re-evelaved by any reson the value is stored anywhere.\n//kyuki hr bar new value ayege wo component ka re-evalvated hona jaruri hai.\n\n//what is spread operator \n//... is the spread operator which gives us the previous value when we have the condition\n//in which we have to store previous value then we used spread operator.\n\n//alternative approach for using usestate here\n\n//const [userinput, setuserinput] = usestate({  =>pass object as perameter\n//  enteredTitle:\"\",\n//  enteredAmount=\"\",\n//  enteredDate=\"\"\n//})\n\n// const titleChangedHandler=(event) =>{\n//  setUserInput ((prevState)=>{\n//    return {...prevState, enteredTitle:event.target.value}\n//})\n//}\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","unstable_renderSubtreeIntoContainer","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangedHadler","event","newVal","target","value","console","log","amountChangedHandler","dateChangedHandler"],"sources":["C:/Users/manis/OneDrive/Desktop/study/react/expense-tracker/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\"; //for details go to expenseitems comment section\r\nimport { unstable_renderSubtreeIntoContainer } from \"react-dom\";\r\n\r\nconst ExpenseForm = () => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\"); // jb bhi amount ki state changed ho.\r\n  const [enteredDate, setEnteredDate] = useState ('') ; // for date state changed \r\n\r\n  const titleChangedHadler = (event) => {\r\n    var newVal = setEnteredTitle(event.target.value); // by which the new updated value we get.\r\n    //because this function helps us to set new value.\r\n    \r\n    console.log(newVal);\r\n  };\r\n\r\n  const amountChangedHandler=(event)=>{\r\n      setEnteredAmount(event.target.value);// by default this value is the string that's why we pass string on use state.\r\n      console.log(setEnteredAmount);\r\n  };\r\n\r\n  const dateChangedHandler=(event) =>{\r\nsetEnteredDate(event.target.value)\r\nconsole.log(setEnteredDate)\r\n  }\r\n  return (\r\n    <form>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input type=\"text\" onChange={titleChangedHadler} />\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" onChange={amountChangedHandler}/>\r\n        </div>\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input type=\"date\" min=\"2020-01-01\" max=\"2023-12-31\" onChange={dateChangedHandler\r\n          } />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"submit\"> Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n\r\n//if we want to add any event listener in any html tag simply add on and the event name.\r\n\r\n//on titlechangeshandeler we apssed the arrgument as event beacus eevent is trigered all the chnages\r\n//which occur on this and gives us the JSON file by which we can take the value of new input.\r\n\r\n//why we use usestate here?\r\n//because when the component is re-evelaved by any reson the value is stored anywhere.\r\n//kyuki hr bar new value ayege wo component ka re-evalvated hona jaruri hai.\r\n\r\n//what is spread operator \r\n//... is the spread operator which gives us the previous value when we have the condition\r\n//in which we have to store previous value then we used spread operator.\r\n\r\n\r\n//alternative approach for using usestate here\r\n\r\n//const [userinput, setuserinput] = usestate({  =>pass object as perameter\r\n//  enteredTitle:\"\",\r\n//  enteredAmount=\"\",\r\n//  enteredDate=\"\"\r\n//})\r\n\r\n\r\n// const titleChangedHandler=(event) =>{\r\n//  setUserInput ((prevState)=>{\r\n//    return {...prevState, enteredTitle:event.target.value}\r\n//})\r\n//}"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AACzC,SAASC,mCAAmC,QAAQ,WAAW;AAAC;AAEhE,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAE,EAAE,CAAC,CAAE,CAAC;;EAEtD,MAAMS,kBAAkB,GAAIC,KAAK,IAAK;IACpC,IAAIC,MAAM,GAAGP,eAAe,CAACM,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClD;;IAEAC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACrB,CAAC;EAED,MAAMK,oBAAoB,GAAEN,KAAK,IAAG;IAChCJ,gBAAgB,CAACI,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IACrCC,OAAO,CAACC,GAAG,CAACT,gBAAgB,CAAC;EACjC,CAAC;EAED,MAAMW,kBAAkB,GAAEP,KAAK,IAAI;IACrCF,cAAc,CAACE,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;EACzB,CAAC;EACD,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,uBAAuB;MAAA,wBACpC;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,UAAO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpB;UAAO,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEC;QAAmB;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/C,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,UAAO;QAAM;UAAA;UAAA;UAAA;QAAA,QAAQ,eACrB;UAAO,IAAI,EAAC,QAAQ;UAAC,GAAG,EAAC,MAAM;UAAC,IAAI,EAAC,MAAM;UAAC,QAAQ,EAAEO;QAAqB;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACzE,eACN;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBACnC;UAAA,UAAO;QAAI;UAAA;UAAA;UAAA;QAAA,QAAQ,eACnB;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAC,YAAY;UAAC,GAAG,EAAC,YAAY;UAAC,QAAQ,EAAEC;QAC9D;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACA;IAAA;MAAA;MAAA;MAAA;IAAA,QACF,eACN;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBACnC;QAAQ,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAY;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACvC;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GA3CIf,WAAW;AAAA,KAAXA,WAAW;AA6CjB,eAAeA,WAAW;;AAE1B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}