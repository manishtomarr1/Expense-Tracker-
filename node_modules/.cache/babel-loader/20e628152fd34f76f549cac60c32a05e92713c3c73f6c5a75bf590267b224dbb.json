{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manis\\\\OneDrive\\\\Desktop\\\\study\\\\react\\\\expense-tracker\\\\src\\\\components\\\\Expenses\\\\ExpensesList.js\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesList = props => {\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 24\n  }, this);\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"No Expenses Found! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.name,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpensesList;\nexport default ExpensesList;\n\n//what is expenseContent?\n//expensecontent is the variable by which we can display the expenses acoording to the\n//expenses like if filteredexpeses is empty then the upper side code is run i.e in <p>\n//else lenght>0's code run.\nvar _c;\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["ExpenseItem","ExpensesList","props","expenseContent","items","length","map","expense","name","amount","date","id"],"sources":["C:/Users/manis/OneDrive/Desktop/study/react/expense-tracker/src/components/Expenses/ExpensesList.js"],"sourcesContent":["import \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = (props) => {\r\n  let expenseContent = <p></p>;\r\n\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses Found! </h2>\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {\r\n        ( props.items.map((expense) => (\r\n          <ExpenseItem\r\n            key={expense.id}\r\n            title={expense.name}\r\n            amount={expense.amount}\r\n            date={expense.date}\r\n          />\r\n        )))\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n\r\n//what is expenseContent?\r\n//expensecontent is the variable by which we can display the expenses acoording to the\r\n//expenses like if filteredexpeses is empty then the upper side code is run i.e in <p>\r\n//else lenght>0's code run.\r\n"],"mappings":";AAAA,OAAO,oBAAoB;AAC3B,OAAOA,WAAW,MAAM,eAAe;AAAC;AAExC,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,IAAIC,cAAc,gBAAG;IAAA;IAAA;IAAA;EAAA,QAAO;EAE5B,IAAID,KAAK,CAACE,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAO;MAAI,SAAS,EAAC,yBAAyB;MAAA,UAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAK;EACzE;EAEA,oBACE;IAAI,SAAS,EAAC,eAAe;IAAA,UAEvBH,KAAK,CAACE,KAAK,CAACE,GAAG,CAAEC,OAAO,iBACxB,QAAC,WAAW;MAEV,KAAK,EAAEA,OAAO,CAACC,IAAK;MACpB,MAAM,EAAED,OAAO,CAACE,MAAO;MACvB,IAAI,EAAEF,OAAO,CAACG;IAAK,GAHdH,OAAO,CAACI,EAAE;MAAA;MAAA;MAAA;IAAA,QAKlB;EAAC;IAAA;IAAA;IAAA;EAAA,QAED;AAET,CAAC;AAAC,KArBIV,YAAY;AAuBlB,eAAeA,YAAY;;AAE3B;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}